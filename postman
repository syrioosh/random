const fs = require('fs');
const axios = require('axios');

const postmanCollection = JSON.parse(fs.readFileSync('/path/to/postman_collection.json', 'utf-8'));
const jestTestOutput = [];

postmanCollection.item.forEach((item) => {
    const { method, header, body, url } = item.request;

    let headers = {};
    if (header && header.length > 0) {
        headers = header.reduce((accumulated, current) => ({ ...accumulated, [current.key]: current.value }), {});
    }

    let data = null;
    if (body && body.mode === 'raw' && body.raw) {
        try {
            data = JSON.parse(body.raw);
        } catch (e) {
            console.warn(`Couldn't parse request body for ${item.name}`);
        }
    }

    const endpointUrl = `${url.protocol}://${url.host.join('')}${url.path.join('/')}`;

    const test = `
        test('${item.name}', async () => {
            const response = await axios({
                method: '${method.toLowerCase()}',
                url: '${endpointUrl}',
                headers: ${JSON.stringify(headers)},
                data: ${JSON.stringify(data)},
            });
            expect(response.status).toBe(200);
        });
    `;
    jestTestOutput.push(test);
});

fs.writeFileSync('/path/to/jest_tests.js', jestTestOutput.join('\n'));
